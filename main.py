import logging
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters
from config import TELEGRAM_TOKEN
from user_data import save_user_data, load_user_data
from buttons import show_menu, button
from message_utils import send_message_with_retries
from utils import request_city
from weather import get_weather  # –î–æ–±–∞–≤–ª–µ–Ω –∏–º–ø–æ—Ä—Ç

logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

async def start(update: Update, context):
    try:
        user_id = update.effective_user.id
        logger.info(f"–ö–æ–º–∞–Ω–¥–∞ /start –ø–æ–ª—É—á–µ–Ω–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
        save_user_data(user_id, city=None)
        await send_message_with_retries(context.bot, update.effective_chat.id, "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã –∏ –∫—É—Ä—Å–∞ –≥—Ä–∏–≤–Ω—ã. –ü—Ä–æ—Å—Ç–æ –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –æ–ø—Ü–∏—é. üòÉ")
        await show_menu(update, context)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ start: {e}")
        await send_message_with_retries(context.bot, update.effective_chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –ø–æ–∑–∂–µ.")

async def save_city(update: Update, context):
    if context.user_data.get('waiting_for_city'):
        city = update.message.text
        user_id = update.effective_user.id
        save_user_data(user_id, city)
        context.user_data['waiting_for_city'] = False
        await send_message_with_retries(context.bot, update.effective_chat.id, f"–ì–æ—Ä–æ–¥ {city} —Å–æ—Ö—Ä–∞–Ω–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}.")
        weather_info = await get_weather(city)
        await send_message_with_retries(context.bot, update.effective_chat.id, weather_info)
        await show_menu(update, context)
    else:
        await button(update, context)

def main():
    logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    application = Application.builder().token(TELEGRAM_TOKEN).build()
    
    logger.info("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start")
    application.add_handler(CommandHandler("start", start))
    
    logger.info("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–æ–º–∞–Ω–¥—ã /menu")
    application.add_handler(CommandHandler("menu", show_menu))

    logger.info("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π")
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, save_city))
    
    logger.info("–ó–∞–ø—É—Å–∫ –æ–ø—Ä–æ—Å–∞...")
    application.run_polling()

if __name__ == "__main__":
    main()
