import requests
import os
import logging

from dotenv import load_dotenv

load_dotenv()  # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞

API_URL = "https://api.ukrainealarm.com/api/v3/alerts"
API_KEY = os.getenv("UKRAINE_ALARM_API_KEY")

logger = logging.getLogger(__name__)

ALERT_TYPES_TRANSLATIONS = {
    "AIR": "–í–æ–∑–¥—É—à–Ω–∞—è —Ç—Ä–µ–≤–æ–≥–∞",
    "ARTILLERY": "–ê—Ä—Ç–∏–ª–ª–µ—Ä–∏–π—Å–∫–∞—è —Ç—Ä–µ–≤–æ–≥–∞",
    "URBAN_FIGHTS": "–ì–æ—Ä–æ–¥—Å–∫–∏–µ –±–æ–∏",
    "MISSILE": "–†–∞–∫–µ—Ç–Ω–∞—è —Ç—Ä–µ–≤–æ–≥–∞",
    "NUCLEAR": "–Ø–¥–µ—Ä–Ω–∞—è —Ç—Ä–µ–≤–æ–≥–∞",
    "CHEMICAL": "–•–∏–º–∏—á–µ—Å–∫–∞—è —Ç—Ä–µ–≤–æ–≥–∞",
    "OTHER": "–î—Ä—É–≥–∞—è —Ç—Ä–µ–≤–æ–≥–∞"
}

def escape_markdown(text):
    escape_chars = r'\_*[]()~`>#+-=|{}.!'
    return ''.join(f'\\{char}' if char in escape_chars else char for char in text)

def get_air_alarm_status():
    headers = {
        "accept": "application/json",
        "Authorization": API_KEY  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–ª—é—á –±–µ–∑ 'Bearer'
    }
    response = requests.get(API_URL, headers=headers)
    if response.status_code == 200:
        data = response.json()
        logger.info(f"–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: {data}")  # –î–æ–±–∞–≤–ª–µ–Ω–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        return parse_air_alarm_data(data)
    else:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –¥–∞–Ω–Ω—ã—Ö: {response.status_code} - {response.text}")
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –≤–æ–∑–¥—É—à–Ω—ã—Ö —Ç—Ä–µ–≤–æ–≥–∞—Ö."

def parse_air_alarm_data(data):
    if isinstance(data, list):
        alerts = data
    else:
        alerts = data.get("alerts", [])
    
    if not alerts:
        return "–í–æ–∑–¥—É—à–Ω—ã—Ö —Ç—Ä–µ–≤–æ–≥ –Ω–µ—Ç."
    
    messages = []
    for alert in alerts:
        region = escape_markdown(alert.get("regionName"))  # –ò—Å–ø–æ–ª—å–∑—É–µ–º 'regionName' –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è —Ä–µ–≥–∏–æ–Ω–∞ –∏ —ç–∫—Ä–∞–Ω–∏—Ä—É–µ–º
        active_alerts = alert.get("activeAlerts", [])
        for active_alert in active_alerts:
            type = active_alert.get("type")
            translated_type = ALERT_TYPES_TRANSLATIONS.get(type, type)
            translated_type = escape_markdown(translated_type)
            if type == "AIR":
                message = f"üî¥ *{translated_type}* –≤ —Ä–µ–≥–∏–æ–Ω–µ: {region}."
            else:
                message = f"‚ö†Ô∏è *{translated_type}* –≤ —Ä–µ–≥–∏–æ–Ω–µ: {region}."
            messages.append(message)
    
    return "\n".join(messages)
